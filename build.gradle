// Apply Gradle plugins
plugins {
	id 'java'
	id 'maven'
	id 'eclipse'
	id 'idea'

	id 'com.github.hierynomus.license' version '0.11.0'
	id 'com.github.johnrengelman.shadow' version '1.2.0'
}

apply plugin: 'checkstyle'

defaultTasks 'clean', 'licenseFormat', 'build', 'shadowJar'

// Project information
group = 'net.amigocraft.mglib'
version = '0.3.1-SNAPSHOT'

// Extended project information
ext.projectName = 'mglib'
ext.description = 'A high-level API for Bukkit minigame creation.'
ext.inceptionYear = '2014'
ext.packaging = 'jar'
ext.versionSuffix = version.contains('SNAPSHOT') && System.getenv("BUILD_NUMBER") ? '-jnks' + System.getenv("BUILD_NUMBER") : ''

sourceCompatibility = 1.6
targetCompatibility = 1.6

ext {
	bukkit = 'org.bukkit:bukkit:1.8-R0.1-SNAPSHOT'
	updater = 'net.gravitydevelopment.updater:updater:2.3'
}

// Project repositories
repositories {
	mavenCentral()
	maven { url 'http://hub.spigotmc.org/nexus/content/groups/public/' }
	maven { url 'http://repo.amigocraft.net/content/groups/public/' }
	maven { url 'http://repo.gravitydevelopment.net' }
}

configurations {
	deployerJars
}

// Project dependencies
dependencies {
	compile bukkit
	compile updater

	deployerJars 'org.apache.maven.wagon:wagon-ssh:2.8'
}

// Read source files using UTF-8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

processResources {
	filter { String line -> line.replace('SNAPSHOT', 'SNAPSHOT' + versionSuffix) }
}

jar {
	classifier = 'base'
}

shadowJar {
	dependencies {
		include dependency(updater)
	}
	classifier = ''
}

processResources {
	from 'LICENSE'
}

// License header formatting
license {
	header file('LICENSE')
	excludes([
			'**/*.csv',
			'**/*.yml',
			'**/Metrics.java'
	])
	sourceSets = project.sourceSets
	ignoreFailures false
	strictCheck true
	mapping {
		java = 'SLASHSTAR_STYLE'
	}
}

// check code style
checkstyle {
	configProperties = [
			"name"		: project.name,
			"year"		: project.inceptionYear
	]
	configFile = file("etc/checkstyle.xml")
}

tasks.withType(Checkstyle){
	exclude '**/*.csv'
	exclude '**/*.yml'
}

task sourceJar(type: Jar) {
	from sourceSets.main.java
	from sourceSets.main.resources
	classifier = "sources"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	from javadoc.destinationDir
	classifier = 'javadoc'
}

artifacts {
	archives shadowJar
	archives sourceJar
	archives javadocJar
}

uploadArchives {
	repositories.mavenDeployer {
		setUniqueVersion(true)
		configuration = configurations.deployerJars
		repository(url: mavenRepo) {
			authentication(userName: mavenUser, password: mavenPass)
		}

		pom {
			groupId = project.group
			version = project.version
			artifactId = project.ext.projectName
			project {
				packaging 'jar'
				description project.ext.description
				url 'http://dev.bukkit.org/bukkit-plugins/mglib'

				scm {
					url 'https://github.com/caseif/MGLib'
					connection 'scm:git:git://github.com/caseif/MGLib.git'
					developerConnection 'scm:git:git@github.com:caseif/MGLib.git'
				}

				licenses {
					license {
						name 'MIT license'
						url 'http://opensource.org/licenses/MIT'
						distribution 'repo'
					}
				}
			}
		}
	}
}
